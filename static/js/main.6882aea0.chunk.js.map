{"version":3,"sources":["components/Naviation.tsx","pages/MainPage.tsx","pages/Experience.tsx","pages/ProjectPage/MiscScripts.tsx","pages/ProjectPage/ShowCase.tsx","pages/ProjectPage/ProjectPage.tsx","pages/ContactPage.tsx","pages/Projects/DBPage.tsx","pages/Projects/RGBPage.tsx","pages/Projects/CCDiscord.tsx","pages/Projects/Test.tsx","pages/Projects/VEXArm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["items","path","label","Navigation","Card","sx","textAlign","verticalAlign","CardContent","Tabs","centered","display","justifyContent","alignItems","margin","map","item","Tab","component","Link","to","p","m","MainPage","className","Grid","container","spacing","direction","sm","Box","background","gridTemplateColumns","md","gap","maxWidth","CardMedia","src","alt","Typography","fontSize","href","underline","Skills","name","ExperiencePage","skill","MiscScriptsTSX","RouterLink","ShowCaseTSX","ProjectPage","ContactPage","maxHeight","title","Photos","DBPage","RGBPage","CCDiscordPage","styled","Paper","theme","typography","body2","color","palette","text","secondary","border","TestTSX","VEXArmPage","App","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ThemeProvider","createTheme","mode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.6882aea0.chunk.js","sourcesContent":["import { Tab, Tabs, Card, CardContent } from \"@mui/material\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst items = [\r\n    { path: '/website/', label: 'Home' },\r\n    { path: '/website/skills', label: 'Skills' },\r\n    { path: '/website/projects', label: 'Projects' },\r\n    { path: '/website/contact', label: 'Contact' },\r\n]\r\n\r\nexport function Navigation() {\r\n    return (\r\n        <Card\r\n            sx={{\r\n                textAlign: \"center\", verticalAlign: \"top\"\r\n            }}>\r\n            <CardContent>\r\n                <Tabs\r\n                    centered sx={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\", alignItems: \"up\",\r\n                        margin: \"auto\",\r\n                        textAlign: \"center\", verticalAlign: \"top\"\r\n                    }}>\r\n                    {items.map(item => {\r\n                        return (\r\n                            <Tab component={Link} label={item.label} to={item.path}\r\n                                sx={{\r\n                                    p: 0,\r\n                                    m: 0,\r\n                                    verticalAlign: \"middle\", textAlign: \"center\"\r\n                                }}\r\n                            ></Tab>\r\n                        )\r\n                    })}\r\n                </Tabs>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n","import { Box, Card, CardContent, CardMedia, Grid, Typography, Link } from \"@mui/material\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst BegImage = [\n    {\n        img: 'https://github.com/peoplestealusernames/website/blob/master/public/Photos/Begin/scratch.png?raw=true',\n        title: 'scratch',\n    },\n    {\n        img: 'https://github.com/peoplestealusernames/website/blob/master/public/Photos/Begin/legoRobotic.png?raw=true',\n        title: 'LEGORobotic',\n    },\n]\n\nexport function MainPage() {\n    return (\n        <div className=\"MainPage\">\n            <Grid container spacing={0}\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                margin=\"auto\"\n                sm={10}\n                sx={{\n                    p: 2,\n                }}\n            >\n                <Box\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    sx={{\n                        p: 3,\n                        background: \"red\",\n                        display: 'grid',\n                        gridTemplateColumns: { md: '1fr 1fr' },\n                        gap: 5,\n                    }}\n                >\n                    <Card sx={{ maxWidth: 500 }}>\n                        <CardContent>\n                            <CardMedia\n                                component=\"img\"\n                                src={\"https://github.com/peoplestealusernames/website/blob/master/public/Photos/Head.jpg?raw=true\"}\n                                alt=\"Head\"\n                            />\n                        </CardContent>\n                    </Card>\n                    <Card sx={{ maxWidth: 345 }}>\n                        <CardContent>\n                            <Typography sx={{\n                                p: 1, fontSize: 35,\n                                justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\n                            }}>\n                                About me\n                            </Typography>\n                            <Typography sx={{\n                                p: .5, fontSize: 20,\n                                justifyContent: \"left\", alignItems: \"left\", textAlign: \"left\"\n                            }}>\n                                Hello, I'm Brett Hogan!\n                            </Typography>\n                            <Typography sx={{\n                                p: 1,\n                                justifyContent: \"left\", alignItems: \"left\", textAlign: \"left\"\n                            }}>\n                                I'm a programming and engineering enthusiast,\n                                currently enrolled at MTSU as a mechatonics major.\n                                With 6 years of engineering, CAD, and programming knowledge.\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </Box>\n            </Grid>\n\n            <Grid container spacing={0}\n                direction=\"column\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                sx={{ p: 2 }}\n            >\n                <Grid container spacing={3}\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    alignItems=\"top\"\n                    margin=\"auto\"\n                    sm={10}\n                    sx={{\n                        p: 2,\n                    }}\n                >\n                    <Card sx={{ m: 1, maxWidth: 500 }}>\n                        <CardContent>\n                            <Typography sx={{\n                                fontSize: 25,\n                                justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\n                            }}>\n                                In school\n                            </Typography>\n                            <Typography sx={{ p: 0.5, fontSize: 20 }}>\n                                6 credits of engineering\n                            </Typography>\n                            <Typography>• Middle school intro class (Semester long)</Typography>\n                            <Typography>• IED (Intro to engineering design)</Typography>\n                            <Typography>• POE (Principles of engineering)</Typography>\n                            <Typography>• Civil (Civil engineering class )</Typography>\n                            <Typography>• EDD (Engineering deisgn and development: Senior capstone)</Typography>\n                            <Typography>• AERO (Aerospace engineering)</Typography>\n                            <Typography>• Engineering fundimentals (This year at MTSU)</Typography>\n                            <Typography sx={{ p: 0.5, fontSize: 20 }}>\n                                Other special classes\n                            </Typography>\n                            <Typography>• Lego robotics</Typography>\n                            <Typography>• Honors Physics</Typography>\n                            <Typography>• Honors Chemistry</Typography>\n                            <Typography>• Honors Pre-Calc</Typography>\n                            <Typography>-</Typography>\n                            <Typography>\n                                My favorite of these classes has to be AERO for how fun learning about space flight was.\n                                A runner up would be POE with the many VEX robotics projects that I loved and thrived with.\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                    <Card sx={{ m: 1, maxWidth: 500 }}>\n                        <CardContent>\n                            <Typography sx={{\n                                fontSize: 25,\n                                justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\n                            }}>\n                                Out of school\n                            </Typography>\n                            <Typography sx={{ p: 0.5, fontSize: 20 }}>\n                                6 years of programming experience\n                            </Typography>\n                            <Typography>\n                                I starting writing very simple lua scripts for a game named GMOD.\n                                Now I'm writing apps in C# and using Nodejs/Typescript to run servers.\n                                Such as the server your reading this off of, it was hand made using material UI.\n                            </Typography>\n                            <Typography sx={{ p: 0.5, fontSize: 20 }}>\n                                2 years of IT and networking experience\n                            </Typography>\n                            <Typography>\n                                I have been in IT and computer/network setup for 2 years.\n                                I setup warrooms of computers and did their networking to have a protected network.\n                                I also ran the IT and printer support for those warrooms.\n                                I also recently started working with servers, nats, and p2p.\n                            </Typography>\n                            <Typography sx={{ p: 0.5, fontSize: 20 }}>\n                                1 years of electrical\n                            </Typography>\n                            <Typography>\n                                I've been working on mutiple project involving custom wiring and microcontrollers.\n                            </Typography>\n                            <Typography>\n                            </Typography>\n                            <Typography></Typography>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid>\n\n\n\n\n\n            <Card sx={{ m: 4 }}>\n                <CardContent>\n                    <Typography>\n                        This website is both an archive of my work and experiences and\n                        a resume.\n                    </Typography>\n                    <Typography>\n                        I belive in showing experties so I think demoing what I've done is better than saying I could.\n                        So I linked my old resume below for a short version, but this site details examples of my experties.\n                    </Typography>\n                    <Link\n                        href='https://github.com/peoplestealusernames/website/blob/master/public/Resume.pdf?raw=true'\n                        underline='hover'>\n                        <Typography>\n                            Archive: Old resume\n                        </Typography>\n                    </Link>\n                </CardContent>\n            </Card>\n        </div >\n    )\n}\n","import { Card, CardContent, CardMedia, Grid, Link, Typography } from \"@mui/material\";\n\nconst Skills = [\n    { name: \"NodeJS\" },\n    { name: \"TypeScript\" },\n    { name: \"Lua\" },\n    { name: \"C#\" },\n    { name: \"Firebase\" },\n    { name: \"OAuth2\" },\n    { name: \"Encryption\" },\n    { name: \"TCP\" },\n    { name: \"SQF\" },\n    { name: \"P2P\" },\n    { name: \"Unity\" },\n    { name: \"Cad\" },\n    { name: \"Autodesk\" },\n    { name: \"Inventor\" },\n    { name: \"Arduino\" },\n    { name: \"Compute shaders\" },\n    { name: \"Soldering\" },\n    { name: \"Networking\" },\n    { name: \"IT\" },\n    { name: \"Java\" },\n    { name: \"Cryptography\" },\n    { name: \"Team Management\" },\n    { name: \"Problem solving\" },\n    { name: \"Electrical\" },\n    { name: \"Engineering\" },\n    { name: \"Aerospace Engineering\" },\n    { name: \"Cordinating\" },\n    { name: \"Hard working\" },\n    { name: \"React\" },\n    { name: \"MUI\" },\n]\n\nexport function ExperiencePage() {\n    return (<Grid container spacing={3}\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        margin=\"auto\"\n        sm={10}\n        sx={{\n            p: 2,\n        }}\n    >\n        {Skills.map(skill => {\n            return (\n                < Grid margin=\"auto\"\n                    sx={{\n                        p: 0.5,\n                    }\n                    }>\n                    <Card sx={{ p: 1, m: 1, maxWidth: 500 }}>\n                        <Typography sx={{\n                            p: 1, fontSize: 40,\n                            justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\n                        }}>\n                            {skill.name}\n                        </Typography>\n                    </Card>\n                </Grid >\n            )\n        })}\n    </Grid >\n    )\n}","import { Card, CardContent, Grid, Link, Typography, Box } from \"@mui/material\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nconst Photos = \"https://github.com/peoplestealusernames/website/blob/master/public/Photos\"\r\n\r\nexport function MiscScriptsTSX() {\r\n    return (\r\n        <Grid container spacing={3}\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            margin=\"auto\"\r\n            sm={10}\r\n            sx={{\r\n                justifyContent: \"center\", alignItems: \"up\", textAlign: \"center\",\r\n                p: 0\r\n            }}\r\n        >\r\n            <Card sx={{ p: 1, m: 1, maxWidth: 220 }}>\r\n                <CardContent>\r\n                    <Link component={RouterLink} to=\"/website/projects/CCDiscord\" underline='hover'>\r\n                        <Typography>\r\n                            Discord bots in CC\r\n                        </Typography>\r\n                    </Link>\r\n                    <Typography>\r\n                        Running a discord bot in minecraft using Computer Craft.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid >\r\n    )\r\n}","import { Card, CardContent, Grid, Link, Typography, Box } from \"@mui/material\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nconst Photos = \"https://github.com/peoplestealusernames/website/blob/master/public/Photos\"\r\n\r\nexport function ShowCaseTSX() {\r\n    return (\r\n        <Grid container spacing={3}\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            margin=\"auto\"\r\n            sm={10}\r\n            sx={{\r\n                justifyContent: \"center\", alignItems: \"up\", textAlign: \"center\",\r\n                p: 0\r\n            }}\r\n        >\r\n            <Card sx={{ p: 1, m: 1, maxWidth: 250 }}>\r\n                <CardContent>\r\n                    <Link component={RouterLink} to=\"/website/projects/VEXRobotArm\" underline='hover'>\r\n                        <Typography>\r\n                            VEX Robotic Arm\r\n                        </Typography>\r\n                    </Link>\r\n                    <Typography>\r\n                        A high school VEX robotic project, in which I made a robotic arm.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ p: 1, m: 1, maxWidth: 250 }}>\r\n                <CardContent>\r\n                    <Link component={RouterLink} to=\"/website/projects/RGB\" underline='hover'>\r\n                        <Typography>\r\n                            RGB\r\n                        </Typography>\r\n                    </Link>\r\n                    <Typography>\r\n                        A mini story about learning electrical from scratch.\r\n                        While connecting a RGB strip to the internet.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ p: 1, m: 1, maxWidth: 220 }}>\r\n                <CardContent>\r\n                    <Link component={RouterLink} to=\"/website/projects/db\" underline='hover'>\r\n                        <Typography>\r\n                            Homebrew database\r\n                        </Typography>\r\n                    </Link>\r\n                    <Typography>\r\n                        A selfmade database system using TCP sockets\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ p: 1, m: 1, maxWidth: 220 }}>\r\n                <CardContent>\r\n                    <Link component={RouterLink} to=\"/website/projects/psudo\" underline='hover'>\r\n                        <Typography>\r\n                            Psudo project\r\n                        </Typography>\r\n                    </Link>\r\n                    <Typography>\r\n                        A group of APIs for future use as part of smarthome project\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid >\r\n    )\r\n}\r\n//TODO: add images","import { Card, CardContent, Grid, Link, Typography, Box } from \"@mui/material\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { MiscScriptsTSX } from \"./MiscScripts\";\nimport { ShowCaseTSX } from \"./ShowCase\";\n\nconst Photos = \"https://github.com/peoplestealusernames/website/blob/master/public/Photos\"\n\n//TODO: add alot of cad projects from ied and poe \nexport function ProjectPage() {\n    return (\n        <div>\n            <Box\n                sx={{\n                    p: 1\n                }}\n            ></Box>\n            <Box\n                sx={{\n                    textAlign: \"center\",\n                    p: 3\n                }}\n            >\n                <Card\n                    sx={{\n                        textAlign: \"center\",\n                        p: .5\n                    }}\n                >\n                    <CardContent>\n                        <Typography sx={{\n                            fontSize: 40,\n                            justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\n                        }}>\n                            Showcase projects\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </Box>\n            <ShowCaseTSX />\n            <Box\n                sx={{\n                    p: 1\n                }}\n            ></Box>\n            <Box\n                sx={{\n                    textAlign: \"center\",\n                    p: 3\n                }}\n            >\n                <Card\n                    sx={{\n                        textAlign: \"center\",\n                        p: .5\n                    }}\n                >\n                    <CardContent>\n                        <Typography sx={{\n                            fontSize: 40,\n                            justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\n                        }}>\n                            Miscellaneous scripts\n                        </Typography>\n                    </CardContent>\n                </Card>\n            </Box>\n            <MiscScriptsTSX />\n        </div >\n    )\n}\n","import { Box, Card, CardContent, CardMedia, Grid, Link, Typography } from \"@mui/material\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst Photos = \"https://github.com/peoplestealusernames/website/blob/master/public/Photos\"\n\nexport function ContactPage() {\n    return (<Grid container spacing={2}\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        margin=\"auto\"\n        sm={10}\n        sx={{\n            p: 2,\n        }}\n    >\n        <Box\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            sx={{\n                p: 3,\n                background: \"red\",\n                display: 'grid',\n                gridTemplateColumns: { md: '1fr 1fr' },\n                gap: 5,\n            }}\n        >\n            <Card sx={{ maxWidth: 500 }}>\n                <CardContent>\n                    <Typography>\n                        (931)-922-6045\n                    </Typography>\n                    <Typography>\n                        bhogan@litigationlogisticsinc.com\n                    </Typography>\n                    <Link href=\"https://github.com/peoplestealusernames/\" underline='hover'>\n                        <Typography>\n                            Github\n                        </Typography>\n                    </Link>\n                    <Link href=\"https://www.linkedin.com/in/brett-hogan-b2052321b/\" underline='hover'>\n                        <Typography>\n                            LinkedIn\n                        </Typography>\n                    </Link>\n                </CardContent>\n            </Card>\n            <Card sx={{ maxWidth: 345 }}>\n                <CardContent>\n                    <Typography>\n                        Contact me!\n                    </Typography>\n                    <Typography>\n                        Feel free to reachout at anytime with any questions, comments, or conserns.\n                    </Typography>\n                </CardContent>\n            </Card>\n        </Box>\n        <Card sx={{ m: 1, maxWidth: 250, maxHeight: 250 }}>\n            <CardContent>\n                <CardMedia sx={{ maxWidth: 250, maxHeight: 250 }}\n                    component=\"img\"\n                    title=\"PIC\"\n                    src={Photos + \"/website.png?raw=true\"}\n                    alt=\"RGB+Screen+APP\"\n                />\n            </CardContent>\n        </Card>\n    </Grid >\n    )\n}\n","import { Card, CardContent, CardMedia, Grid, Link, Typography } from \"@mui/material\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst Photos = \"https://github.com/peoplestealusernames/website/blob/master/public/Photos\"\n\nexport function DBPage() {\n    return (<Grid container\n        spacing={1}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        margin=\"auto\"\n        sm={10}\n        sx={{\n            p: 2,\n        }}>\n        <Card sx={{ p: 2, maxWidth: 4000, textAlign: \"left\" }}>\n            <CardContent>\n                <Typography sx={{\n                    p: 1, fontSize: 40,\n                    justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\n                }}>\n                    Homebrew database\n                </Typography>\n                <Typography sx={{ p: .5 }}>\n                    The homebrew database is a project I've been working on to function as a form of custom smart home system.\n                    It's currently in a template stage as I lack the physical components to make this possible.\n                    The server software however is currently in a very workable and useable state.\n                </Typography>\n                <Typography sx={{ p: .5 }}>\n                    The current implimentation uses a NAT-Punching TCP socket-listner combo.\n                    Although this is far from production grade I had to work around not having port fowarding.\n                </Typography>\n                <Typography sx={{ p: .5 }}>\n                    Although previous versions used googles firebase\n                    observable in the orgional commits.\n                    I moved away from this for a more custom system as future proofing.\n                    It does however still using firebase as a signaling server (no static ip or port).\n                    I'm working on getting this to handle large amounts of sensor data which firebase would require payment for.\n                    It was also a latency issue where even with a simple RGB light a noticable lag was pressent.\n                </Typography>\n            </CardContent>\n        </Card>\n        <Grid container sx={{ p: 2 }} spacing={3}\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"top\"\n            margin=\"auto\"\n            sm={10}\n        >\n            <Card sx={{ m: 1, p: 1, maxWidth: 500 }}>\n                <CardContent>\n                    <Typography sx={{\n                        p: 1, fontSize: 30,\n                    }}>\n                        Full setup\n                    </Typography>\n                    <CardMedia sx={{ maxHeight: 300 }}\n                        component=\"img\"\n                        title=\"PIC\"\n                        src={Photos + \"/Projects/DB/Whole.jpg?raw=true\"}\n                        alt=\"RGB+Screen+APP\"\n                    />\n                </CardContent>\n            </Card>\n            <Card sx={{ m: 1, p: 1, maxWidth: 250, textAlign: \"left\" }}>\n                <CardContent>\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\n                        Database\n                    </Typography>\n                    <Typography sx={{ m: 1 }}>\n                        The left terminal on the PC.\n                        Current implimentation is fundamentally simple.\n                        It works similar to http requests and websockets.\n                        Functions are 'PUT' 'GET' 'LISTEN'.\n                        Put and get being obvious Listen however my take on googles snapshot system.\n                        For example A puts a listen on RGB.\n                        It recives a put request with the current state and any changes after.\n                    </Typography>\n                    <Link href=\"https://github.com/peoplestealusernames/Database\" underline='hover'>\n                        GIT: Database\n                    </Link>\n                    <Link href=\"https://www.npmjs.com/package/tenk-database\" underline='hover'>\n                        NPM: tenk-database\n                    </Link>\n                </CardContent>\n            </Card>\n            <Card sx={{ m: 1, p: 1, maxWidth: 250, textAlign: \"left\" }}>\n                <CardContent>\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\n                        RGB Controller\n                    </Typography>\n                    <Typography sx={{ m: 1 }}>\n                        The right terminal on the PC.\n                        Using the server this listens to the RGB path.\n                        It then signals to a arduino using a custom serializer to change the PWM on pins.\n                        In turn switching transistors a certain % on or off.\n                    </Typography>\n                    <Link href=\"https://github.com/peoplestealusernames/TCPRGB\" underline='hover'>\n                        <Typography>\n                            GIT: Node:RGB\n                        </Typography>\n                    </Link>\n                    <Link href=\"https://github.com/peoplestealusernames/ArduinoRGB\" underline='hover'>\n                        <Typography>\n                            GIT: Ardunio:RGB\n                        </Typography>\n                    </Link>\n                    <Link href=\"website/projects/RGB\" underline='hover'>\n                        <Typography>\n                            Project: RGB\n                        </Typography>\n                    </Link>\n                </CardContent>\n            </Card>\n            <Card sx={{ m: 1, p: 1, maxWidth: 250, textAlign: \"left\" }}>\n                <CardContent>\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\n                        Wall display\n                    </Typography>\n                    <Typography sx={{ m: 1 }}>\n                        Screen on the wall to the right.\n                        This is a custom display running off unity.\n                        It is connected to the server via TCP and has a sleep function.\n                        This was a proof of concept for future derivatives of the smart home project.\n                        Currently it functions as a sun dial, clock, and calander.\n                    </Typography>\n                    <Link href=\"https://github.com/peoplestealusernames/Unity-Wall-Display\" underline='hover'>\n                        GIT: Wall-Display\n                    </Link>\n                </CardContent>\n            </Card>\n            <Card sx={{ m: 1, p: 1, maxWidth: 250, textAlign: \"left\" }}>\n                <CardContent>\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\n                        Phone app\n                    </Typography>\n                    <Typography sx={{ m: 1 }}>\n                        Second computer on the lower shelf.\n                        This is a custom phone app running in unity.\n                        It is also connected to the server.\n                        Currently it only functions as a toggle for puting the display into sleep mode and RGB control.\n                        The RGB color wheel however does work and has drag functionality.\n                    </Typography>\n                    <Link href=\"https://github.com/peoplestealusernames/Connector-App\" underline='hover'>\n                        GIT: Phone app\n                    </Link>\n                </CardContent>\n            </Card>\n            <Card sx={{ m: 1, p: 1, maxWidth: 250, textAlign: \"left\" }}>\n                <CardContent>\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\n                        Custom Encryption\n                    </Typography>\n                    <Typography sx={{ m: 1 }}>\n                        The database runs on its own encryption system to allow programs without encryption to connect.\n                        The current implimentation uses utf-16 strings and converts them to numbers.\n                        Nodejs had a error in the rough range of 55,000-60,000 out of 65,000 so only the first 50,000 characters are used.\n                        In future I plan to reimpliment an old encryption system I wrote in lua off a spreadsheet test.\n                    </Typography>\n                    <Link href=\"https://github.com/peoplestealusernames/Database/blob/master/tenk-database/ts/crypto.ts\" underline='hover'>\n                        <Typography> GIT: Custom Encryption API</Typography>\n                    </Link>\n                    <Link href=\"https://github.com/peoplestealusernames/CC-Code/blob/master/API/EncryptionAPI.lua\" underline='hover'>\n                        <Typography> GIT: Old LUA code</Typography>\n                    </Link>\n                </CardContent>\n            </Card>\n        </Grid >\n    </Grid >\n    )\n}\n\n//TODO: Encryption project for all encrpytion attempts","import { Card, CardContent, Grid, Typography } from \"@mui/material\";\n\nconst Photos = \"https:/ / github.com / peoplestealusernames / website / blob / master / public / Photos\"\n\nexport function RGBPage() {\n    return (<Grid container\n        spacing={1}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        margin=\"auto\"\n        sm={10}\n        sx={{\n            p: 2,\n        }}>\n        <Card sx={{ p: 2, maxWidth: 4000, textAlign: \"left\" }}>\n            <CardContent>\n                <Typography sx={{\n                    p: 1, fontSize: 40,\n                    justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\n                }}>\n                    RGB, Ardunio, and simulation vs reality\n                </Typography>\n                <Typography sx={{ p: .5 }}>\n                    Trying to get the RGB lights to work with an Ardunio was my first time leaving a sim or software.\n                    I quickly learned just how little I learn a lot from it.\n                </Typography>\n            </CardContent>\n        </Card>\n        <Grid container sx={{ p: 2 }} spacing={3}\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"top\"\n            margin=\"auto\"\n            sm={10}\n        >\n            <Card sx={{ m: 1, p: 1, maxWidth: 400, textAlign: \"left\" }}>\n                <CardContent>\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\n                        General electrical\n                    </Typography>\n                    <Typography sx={{ m: 1 }}>\n                        I was compelely clueless at electrical and thought that everything would work like software.\n                        That was a very wrong assumption I got the wrong transistors, resistors, and had no pins.\n                        I effectivly had expensive desk orniments that could not be used.\n                        I also had to get a multimeter because I did not think i would need one.\n                    </Typography>\n                    <Typography sx={{ m: 1 }}>\n                        I learned that hardware more than anything runs on Murphy's law.\n                        I learned about Ohms law proper, wiring, and connection making.\n                    </Typography>\n                </CardContent>\n            </Card>\n            <Card sx={{ m: 1, p: 1, maxWidth: 400, textAlign: \"left\" }}>\n                <CardContent>\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\n                        Learning Arduino\n                    </Typography>\n                    <Typography sx={{ m: 1 }}>\n                        Learning Arduino was something I passed off as the eaisest part.\n                        Although Arduino coding is easy debug was not what I was expecting.\n                        I think I tried just about every form of software debug until I bought a multimeter.\n                        In hindsight the issues were very easy to spot but I thought I could tough it out like software.\n                    </Typography>\n                </CardContent>\n            </Card>\n            <Card sx={{ m: 1, p: 1, maxWidth: 400, textAlign: \"left\" }}>\n                <CardContent>\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\n                        Soldering\n                    </Typography>\n                    <Typography sx={{ m: 1 }}>\n                        I never even heard of this until a friend pointed it out to me.\n                        I would like to say I'm decent at it now, however I will admit to causing plenty of mending and burning in the proccess.\n                        I made a few rookie mistakes like pin connector to make a connection rather than just using the pin.\n                        Very bad and weak solder on power supplies.\n                        Connecting pins together on the Ardunio.\n                        All of which have been fix but learning it was a fun challenge.\n                    </Typography>\n                </CardContent>\n            </Card>\n        </Grid >\n    </Grid >\n    )\n}\n\n//TODO: Encryption project for all encrpytion attempts","import { Card, CardContent, CardMedia, Grid, Link, Typography } from \"@mui/material\";\n\nconst Photos = \"https://github.com/peoplestealusernames/website/blob/master/public/Photos\"\n\nexport function CCDiscordPage() {\n    return (<Grid container\n        spacing={1}\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        margin=\"auto\"\n        sm={10}\n        sx={{\n            p: 2,\n        }}>\n        <Card sx={{ p: 2, maxWidth: 4000, textAlign: \"left\" }}>\n            <CardContent>\n                <Typography sx={{\n                    p: 1, fontSize: 40,\n                    justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\n                }}>\n                    Discord bots running off Computer Craft\n                </Typography>\n                <Typography sx={{ p: .5 }}>\n                    This project was one of my first attempts working with any from of webprotocal.\n                    It was also my first time working with OAuth and Discord.\n                    Unlike other solution I saw this does it all in ComputerCraft.\n                </Typography>\n                <Link href=\"https://github.com/peoplestealusernames/Computer-Craft-and-discord/\" underline='hover'>\n                    <Typography>\n                        GIT: Computer Craft and discord\n                    </Typography>\n                </Link>\n            </CardContent>\n        </Card>\n        <Grid container sx={{ p: 2 }} spacing={3}\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"top\"\n            margin=\"auto\"\n            sm={10}\n        >\n            <Card sx={{ m: 1, p: 1, maxWidth: 400, textAlign: \"left\" }}>\n                <CardContent>\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\n                        The Basics\n                    </Typography>\n                    <Typography sx={{ m: 1 }}>\n                        In all its a realativly short and pretty basic code.\n                        All it does is monitor a discord chat and exec anything posted in chat.\n                    </Typography>\n                    <Typography sx={{ m: 1 }}>\n                        But the oringals looked very ugly and this was my terminal into minecraft.\n                        So I spent too much of the time working on doing things like\n                        having it make its own chat and\n                        formating on the msg.\n                    </Typography>\n                </CardContent>\n            </Card>\n            <Card sx={{ m: 1, p: 1, maxWidth: 400, textAlign: \"left\" }}>\n                <CardContent>\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\n                        Behind The Scenes\n                    </Typography>\n                    <Typography sx={{ m: 1 }}>\n                        Truth be told however I found out Computer Craft had websockets\n                        but not very good websocket support.\n                        I had to make a custom heart beat system and find unique ways to send\n                        messages to discords standards.\n                    </Typography>\n                </CardContent>\n            </Card>\n            <Card sx={{ m: 1, p: 1, maxWidth: 400, textAlign: \"left\" }}>\n                <CardContent>\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\n                        Login\n                    </Typography>\n                    <Typography sx={{ p: .5, fontSize: 20, textAlign: \"center\" }}>\n                        Where I can do better\n                    </Typography>\n                    <Typography sx={{ m: 1 }}>\n                        The login system is a hot mess.\n                        It checks everything before attempting to loggin but,\n                        Logging in all happens within the same while loop.\n                        This is because I thought having a constantly updating auth in the main loop would be bad.\n                        But because of the fragmented way discord handles auth it can lead to some data loss.\n                        It also has zero error handling if it fails it crashes end and you have to manualy reboot.\n                    </Typography>\n                </CardContent>\n            </Card>\n        </Grid >\n    </Grid >\n    )\n}\n//TODO: add photo of discord bot","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport { Typography } from '@mui/material';\r\n\r\nconst heights = [150, 30, 90, 70, 110, 150, 130, 80, 50, 90, 100, 150, 30, 50, 80];\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    color: theme.palette.text.secondary,\r\n    border: '1px solid black',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n}));\r\n\r\nexport default function TestTSX() {\r\n    return (\r\n        <Typography>AYE</Typography>\r\n    );\r\n}","import { Card, CardContent, CardMedia, Grid, Link, Typography } from \"@mui/material\";\r\n\r\nconst Photos = \"https://github.com/peoplestealusernames/website/blob/master/public/Photos\"\r\n\r\nexport function VEXArmPage() {\r\n    return (<Grid container\r\n        spacing={1}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        margin=\"auto\"\r\n        sm={10}\r\n        sx={{\r\n            p: 2,\r\n        }}>\r\n        <Card sx={{ p: 2, maxWidth: 4000, textAlign: \"left\" }}>\r\n            <CardContent>\r\n                <Typography sx={{\r\n                    p: 1, fontSize: 40,\r\n                    justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\r\n                }}>\r\n                    Vex robotic arm\r\n                </Typography>\r\n                <Typography sx={{ p: .5 }}>\r\n                    This was a high school project where we were offered mutliple problems to solve.\r\n                    One of them was to make a working robotic arm and this is my atempt.\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n        <Grid container sx={{ p: 2 }} spacing={3}\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"top\"\r\n            margin=\"auto\"\r\n            sm={10}\r\n        >\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 500 }}>\r\n                <CardContent>\r\n                    <Typography sx={{\r\n                        p: 1, fontSize: 30,\r\n                    }}>\r\n                        Full setup\r\n                    </Typography>\r\n                    <CardMedia sx={{ maxHeight: 300 }}\r\n                        component=\"img\"\r\n                        title=\"RobotArm\"\r\n                        src={Photos + \"/Projects/RobotArm/RobotArmFull.jpg?raw=true\"}\r\n                        alt=\"Full Robotic Arm\"\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 400, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        The Design\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        Me and my group partner thought a two joint robotic arm on a swivel would be the best deisgn.\r\n                        And from there we slowly assembled it using servos and the metal plates.\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        Quickly finding out the servos were two weak to handle the weight.\r\n                        Hence things like the counter weight.\r\n                    </Typography>\r\n                    <Typography sx={{ p: 1, fontSize: 20, textAlign: \"center\" }}>\r\n                        The Controller\r\n                    </Typography>\r\n                    <Typography>\r\n                        Seen in the back of the photo it is four potetiometers on a plate connected to the controller.\r\n                        The reason for this deisgn is we were limited to a basic VEX kit, and it offered the most control.\r\n                        Each potetiometer was linked to a servo and was scaled up accordingly in code.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 400, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        The code\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        Although I lost the source code I do remember what it did and the sturgle to make it work.\r\n                        It was a simple always on while true loop that kept setting servo position to potetiometer input.\r\n                        Only one issue servos are 0-180 but potetiometers were -257-257 on testing.\r\n                        So simple clamp and scaleing methods had to be used to adjust it correctly.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 400, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        What I learned\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        The deisgn of this robotic arm failed almost on start,\r\n                        as right after attaching the first joint the swivil gave out.\r\n                        All of this project became a problem solving issue.\r\n                        This I can pretty confidently say is the limit of VEX.\r\n                        But we made it work with creative problem solving and perseverence.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid >\r\n    </Grid >\r\n    )\r\n}\r\n//TODO: see if you can find src code","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { } from 'react-router'\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\nimport { Navigation } from './components/Naviation';\nimport { MainPage } from './pages/MainPage';\nimport { ExperiencePage } from './pages/Experience';\nimport { ProjectPage } from './pages/ProjectPage/ProjectPage';\nimport { ContactPage } from './pages/ContactPage';\nimport { DBPage } from './pages/Projects/DBPage';\nimport { RGBPage } from './pages/Projects/RGBPage';\nimport { CCDiscordPage } from './pages/Projects/CCDiscord';\nimport TestTSX from './pages/Projects/Test';\nimport { VEXArmPage } from './pages/Projects/VEXArm';\n\n//TODO click on images to enlarge them\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navigation />\n      <Routes>\n        <Route path=\"website/\" element={\n          <MainPage />\n        } />\n        <Route path=\"website/contact\" element={\n          <ContactPage />\n        } />\n        <Route path=\"website/projects\" element={\n          <ProjectPage />\n        } />\n        <Route path=\"website/skills\" element={\n          <ExperiencePage />\n        } />\n        <Route path=\"website/projects/db\" element={\n          <DBPage />\n        } />\n        <Route path=\"website/projects/RGB\" element={\n          <RGBPage />\n        } />\n        <Route path=\"website/projects/CCDiscord\" element={\n          <CCDiscordPage />\n        } />\n        <Route path=\"website/test\" element={\n          <TestTSX />\n        } />\n        <Route path=\"website/projects/VEXRobotArm\" element={\n          <VEXArmPage />\n        } />\n      </Routes>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createTheme, CssBaseline, ThemeProvider } from '@mui/material';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={createTheme({ palette: { mode: 'dark' } })}>\n      <CssBaseline>\n        <App />\n      </CssBaseline>\n    </ThemeProvider>\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}