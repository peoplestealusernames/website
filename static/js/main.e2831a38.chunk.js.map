{"version":3,"sources":["components/Naviation.tsx","pages/MainPage.tsx","pages/Experience.tsx","pages/ProjectPage/MiscScripts.tsx","pages/ProjectPage/ShowCase.tsx","pages/ProjectPage/ProjectPage.tsx","pages/ContactPage.tsx","pages/Projects/DBPage.tsx","pages/Projects/RGBPage.tsx","pages/Projects/CCDiscord.tsx","pages/Projects/Test.tsx","pages/Projects/VEXArm.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["items","path","label","Navigation","Card","sx","textAlign","verticalAlign","CardContent","Tabs","centered","display","justifyContent","alignItems","margin","map","item","Tab","component","Link","to","p","m","MainPage","className","Grid","container","spacing","direction","sm","Box","background","gridTemplateColumns","md","gap","maxWidth","CardMedia","src","alt","height","Typography","fontSize","href","underline","Skills","name","ExperiencePage","skill","MiscScriptsTSX","RouterLink","ShowCaseTSX","ProjectPage","ContactPage","maxHeight","title","process","DBPage","imageOrientation","RGBPage","CCDiscordPage","styled","Paper","theme","typography","body2","color","palette","text","secondary","border","TestTSX","VEXArmPage","App","basename","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ThemeProvider","createTheme","mode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.e2831a38.chunk.js","sourcesContent":["import { Tab, Tabs, Card, CardContent } from \"@mui/material\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst items = [\r\n    { path: '/', label: 'Home' },\r\n    { path: '/skills', label: 'Skills' },\r\n    { path: '/projects', label: 'Projects' },\r\n    { path: '/contact', label: 'Contact' },\r\n]\r\n\r\nexport function Navigation() {\r\n    return (\r\n        <Card\r\n            sx={{\r\n                textAlign: \"center\", verticalAlign: \"top\"\r\n            }}>\r\n            <CardContent>\r\n                <Tabs\r\n                    centered sx={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\", alignItems: \"up\",\r\n                        margin: \"auto\",\r\n                        textAlign: \"center\", verticalAlign: \"top\"\r\n                    }}>\r\n                    {items.map(item => {\r\n                        return (\r\n                            <Tab component={Link} label={item.label} to={item.path}\r\n                                sx={{\r\n                                    p: 0,\r\n                                    m: 0,\r\n                                    verticalAlign: \"middle\", textAlign: \"center\"\r\n                                }}\r\n                            ></Tab>\r\n                        )\r\n                    })}\r\n                </Tabs>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n","import { Box, Card, CardContent, CardMedia, Grid, Typography, Link } from \"@mui/material\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nexport function MainPage() {\r\n    return (\r\n        <div className=\"MainPage\">\r\n            <Grid container spacing={0}\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                margin=\"auto\"\r\n                sm={10}\r\n                sx={{\r\n                    p: 2,\r\n                }}\r\n            >\r\n                <Box\r\n                    justifyContent=\"center\"\r\n                    alignItems=\"center\"\r\n                    sx={{\r\n                        p: 3,\r\n                        background: \"red\",\r\n                        display: 'grid',\r\n                        gridTemplateColumns: { md: '1fr 1fr' },\r\n                        gap: 5,\r\n                    }}\r\n                >\r\n                    <Card sx={{ maxWidth: 500 }}>\r\n                        <CardContent>\r\n                            <CardMedia\r\n                                component=\"img\"\r\n                                src={\"https://media-exp1.licdn.com/dms/image/C5603AQF5Uq7sCMbd7A/profile-displayphoto-shrink_200_200/0/1630103682477?e=1651708800&v=beta&t=AznYZIs0IPnWvUVtwgemsGho-ePZy9TYKLG_HJDppGg\"}\r\n                                alt=\"Head\"\r\n                            />\r\n                        </CardContent>\r\n                    </Card>\r\n                    <Card sx={{ maxWidth: 345, height: 353 }}>\r\n                        <CardContent>\r\n                            <Typography sx={{\r\n                                p: 1, fontSize: 35,\r\n                                justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\r\n                            }}>\r\n                                About me\r\n                            </Typography>\r\n                            <Typography sx={{\r\n                                p: .5, fontSize: 20,\r\n                                justifyContent: \"left\", alignItems: \"left\", textAlign: \"left\"\r\n                            }}>\r\n                                Hello, I'm Brett Hogan!\r\n                            </Typography>\r\n                            <Typography sx={{\r\n                                p: 1,\r\n                                justifyContent: \"left\", alignItems: \"left\", textAlign: \"left\"\r\n                            }}>\r\n                                I'm a programming and engineering enthusiast,\r\n                                enrolled at MTSU as a mechatonics major.\r\n                            </Typography>\r\n                            <Typography sx={{\r\n                                p: 1,\r\n                                justifyContent: \"left\", alignItems: \"left\", textAlign: \"left\"\r\n                            }}>\r\n                                7 years of engineering knowledge.\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Box>\r\n            </Grid>\r\n\r\n            <Card sx={{ m: 4 }}>\r\n                <CardContent>\r\n                    <Typography>\r\n                        This website is both an archive of my work and experiences and\r\n                        a digital resume. But is also a work in progress.\r\n                    </Typography>\r\n                    <Typography>\r\n                        I belive in showing experties so I think demoing what I've done is better than saying I could.\r\n                        But I do still need a paper resume and that is linked below.\r\n                    </Typography>\r\n                    <Link\r\n                        href='https://github.com/peoplestealusernames/website/blob/master/public/Resume.pdf'\r\n                        underline='hover'>\r\n                        <Typography>\r\n                            Resume\r\n                        </Typography>\r\n                    </Link>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            <Card sx={{ m: 4 }}>\r\n                <CardContent>\r\n                    <Typography sx={{\r\n                        fontSize: 25,\r\n                        justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\r\n                    }}>\r\n                        Knowledge and skills\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n\r\n            <Grid container spacing={3}\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"top\"\r\n                margin=\"auto\"\r\n                sm={10}\r\n                sx={{\r\n                    p: 0,\r\n                }}\r\n            >\r\n                <Card sx={{ m: 1, maxWidth: 500 }}>\r\n                    <CardContent>\r\n                        <Typography sx={{\r\n                            fontSize: 25,\r\n                            justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\r\n                        }}>\r\n                            In school\r\n                        </Typography>\r\n                        <Typography sx={{ p: 0.5, fontSize: 20 }}>\r\n                            6 credits of engineering\r\n                        </Typography>\r\n                        <Typography>• Middle school intro class (Semester long)</Typography>\r\n                        <Typography>• IED (Intro to engineering design)</Typography>\r\n                        <Typography>• POE (Principles of engineering)</Typography>\r\n                        <Typography>• Civil (Civil engineering class )</Typography>\r\n                        <Typography>• EDD (Engineering deisgn and development: Senior capstone)</Typography>\r\n                        <Typography>• AERO (Aerospace engineering)</Typography>\r\n                        <Typography>• Engineering fundimentals (This year at MTSU)</Typography>\r\n                        <Typography sx={{ p: 0.5, fontSize: 20 }}>\r\n                            Other special classes\r\n                        </Typography>\r\n                        <Typography>• Lego robotics</Typography>\r\n                        <Typography>• Honors Physics</Typography>\r\n                        <Typography>• Honors Chemistry</Typography>\r\n                        <Typography>• Honors Pre-Calc</Typography>\r\n                    </CardContent>\r\n                </Card>\r\n                <Card sx={{ m: 1, maxWidth: 500 }}>\r\n                    <CardContent>\r\n                        <Typography sx={{\r\n                            fontSize: 25,\r\n                            justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\r\n                        }}>\r\n                            Out of school\r\n                        </Typography>\r\n                        <Typography sx={{ p: 0.5, fontSize: 20 }}>\r\n                            6 years of programming experience\r\n                        </Typography>\r\n                        <Typography>\r\n                            I starting writing very simple scripts for video games.\r\n                            But slowly worked my way up to programming microcontrollers, writing C# apps and using Nodejs/Typescript to run servers.\r\n                            Such as the server your reading this off of, it was hand made using material UI.\r\n                        </Typography>\r\n                        <Typography sx={{ p: 0.5, fontSize: 20 }}>\r\n                            2 years of IT and networking experience\r\n                        </Typography>\r\n                        <Typography>\r\n                            I have been in IT and computer/network setup for 2 years.\r\n                            I also setup warrooms of computers and did their networking to have a protected network.\r\n                            And have worked with NATs, P2P servies, and server networking.\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n        </div >\r\n    )\r\n}\r\n","import { Card, CardContent, CardMedia, Grid, Link, Typography } from \"@mui/material\";\r\n\r\nconst Skills = [\r\n    { name: \"NodeJS\" },\r\n    { name: \"TypeScript\" },\r\n    { name: \"Lua\" },\r\n    { name: \"C#\" },\r\n    { name: \"Firebase\" },\r\n    { name: \"OAuth2\" },\r\n    { name: \"Encryption\" },\r\n    { name: \"TCP\" },\r\n    { name: \"SQF\" },\r\n    { name: \"P2P\" },\r\n    { name: \"Unity\" },\r\n    { name: \"Cad\" },\r\n    { name: \"Autodesk\" },\r\n    { name: \"Inventor\" },\r\n    { name: \"Arduino\" },\r\n    { name: \"Compute shaders\" },\r\n    { name: \"Soldering\" },\r\n    { name: \"Networking\" },\r\n    { name: \"IT\" },\r\n    { name: \"Java\" },\r\n    { name: \"Cryptography\" },\r\n    { name: \"Team Management\" },\r\n    { name: \"Problem solving\" },\r\n    { name: \"Electrical\" },\r\n    { name: \"Engineering\" },\r\n    { name: \"Aerospace Engineering\" },\r\n    { name: \"Cordinating\" },\r\n    { name: \"Hard working\" },\r\n    { name: \"React\" },\r\n    { name: \"MUI\" },\r\n]\r\n\r\nexport function ExperiencePage() {\r\n    return (<Grid container spacing={3}\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        margin=\"auto\"\r\n        sm={10}\r\n        sx={{\r\n            p: 2,\r\n        }}\r\n    >\r\n        {Skills.map(skill => {\r\n            return (\r\n                < Grid margin=\"auto\"\r\n                    sx={{\r\n                        p: 0.5,\r\n                    }\r\n                    }>\r\n                    <Card sx={{ p: 1, m: 1, maxWidth: 500 }}>\r\n                        <Typography sx={{\r\n                            p: 1, fontSize: 40,\r\n                            justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\r\n                        }}>\r\n                            {skill.name}\r\n                        </Typography>\r\n                    </Card>\r\n                </Grid >\r\n            )\r\n        })}\r\n    </Grid >\r\n    )\r\n}","import { Card, CardContent, Grid, Link, Typography, Box } from \"@mui/material\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nexport function MiscScriptsTSX() {\r\n    return (\r\n        <Grid container spacing={3}\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            margin=\"auto\"\r\n            sm={10}\r\n            sx={{\r\n                justifyContent: \"center\", alignItems: \"up\", textAlign: \"center\",\r\n                p: 0\r\n            }}\r\n        >\r\n            <Card sx={{ p: 1, m: 1, maxWidth: 220 }}>\r\n                <CardContent>\r\n                    <Link component={RouterLink} to=\"/projects/CCDiscord\" underline='hover'>\r\n                        <Typography>\r\n                            Discord bots in CC\r\n                        </Typography>\r\n                    </Link>\r\n                    <Typography>\r\n                        Running a discord bot in Minecraft using Computer Craft.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid >\r\n    )\r\n}","import { Card, CardContent, Grid, Link, Typography, Box } from \"@mui/material\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nexport function ShowCaseTSX() {\r\n    return (\r\n        <Grid container spacing={3}\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            margin=\"auto\"\r\n            sm={10}\r\n            sx={{\r\n                justifyContent: \"center\", alignItems: \"up\", textAlign: \"center\",\r\n                p: 0\r\n            }}\r\n        >\r\n            <Card sx={{ p: 1, m: 1, maxWidth: 250 }}>\r\n                <CardContent>\r\n                    <Link component={RouterLink} to=\"/projects/VEXRobotArm\" underline='hover'>\r\n                        <Typography>\r\n                            VEX Robotic Arm\r\n                        </Typography>\r\n                    </Link>\r\n                    <Typography>\r\n                        A high school VEX robotic project.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ p: 1, m: 1, maxWidth: 250 }}>\r\n                <CardContent>\r\n                    <Link component={RouterLink} to=\"/projects/RGB\" underline='hover'>\r\n                        <Typography>\r\n                            RGB Arduino\r\n                        </Typography>\r\n                    </Link>\r\n                    <Typography>\r\n                        Connecting a Arduino to the internet as a RGB light controller.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ p: 1, m: 1, maxWidth: 220 }}>\r\n                <CardContent>\r\n                    <Link component={RouterLink} to=\"/projects/db\" underline='hover'>\r\n                        <Typography>\r\n                            Homebrew database\r\n                        </Typography>\r\n                    </Link>\r\n                    <Typography>\r\n                        A selfmade database system.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            {/*\r\n            <Card sx={{ p: 1, m: 1, maxWidth: 220 }}>\r\n                <CardContent>\r\n                    <Link component={RouterLink} to=\"/projects/psudo\" underline='hover'>\r\n                        <Typography>\r\n                            Psudo project\r\n                        </Typography>\r\n                    </Link>\r\n                    <Typography>\r\n                        A group of APIs for future use as part of smarthome project\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        */}\r\n        </Grid >\r\n    )\r\n}\r\n//TODO: add images","import { Card, CardContent, Grid, Link, Typography, Box } from \"@mui/material\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport { MiscScriptsTSX } from \"./MiscScripts\";\r\nimport { ShowCaseTSX } from \"./ShowCase\";\r\n\r\n//TODO: add alot of cad projects from ied and poe \r\nexport function ProjectPage() {\r\n    return (\r\n        <div>\r\n            <Box\r\n                sx={{\r\n                    p: 1\r\n                }}\r\n            ></Box>\r\n            <Box\r\n                sx={{\r\n                    textAlign: \"center\",\r\n                    p: 3\r\n                }}\r\n            >\r\n                <Card\r\n                    sx={{\r\n                        textAlign: \"center\",\r\n                        p: .5\r\n                    }}\r\n                >\r\n                    <CardContent>\r\n                        <Typography sx={{\r\n                            fontSize: 40,\r\n                            justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\r\n                        }}>\r\n                            Showcase projects\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Box>\r\n            <ShowCaseTSX />\r\n            <Box\r\n                sx={{\r\n                    p: 1\r\n                }}\r\n            ></Box>\r\n            <Box\r\n                sx={{\r\n                    textAlign: \"center\",\r\n                    p: 3\r\n                }}\r\n            >\r\n                <Card\r\n                    sx={{\r\n                        textAlign: \"center\",\r\n                        p: .5\r\n                    }}\r\n                >\r\n                    <CardContent>\r\n                        <Typography sx={{\r\n                            fontSize: 40,\r\n                            justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\r\n                        }}>\r\n                            Miscellaneous scripts\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Box>\r\n            <MiscScriptsTSX />\r\n        </div >\r\n    )\r\n}\r\n","import { Box, Card, CardContent, CardMedia, Grid, Link, Typography } from \"@mui/material\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nexport function ContactPage() {\r\n    return (<Grid container spacing={2}\r\n        direction=\"column\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        margin=\"auto\"\r\n        sm={10}\r\n        sx={{\r\n            p: 2,\r\n        }}\r\n    >\r\n        <Box\r\n            justifyContent=\"center\"\r\n            alignItems=\"center\"\r\n            sx={{\r\n                p: 3,\r\n                background: \"red\",\r\n                display: 'grid',\r\n                gridTemplateColumns: { md: '1fr 1fr' },\r\n                gap: 5,\r\n            }}\r\n        >\r\n            <Card sx={{ maxWidth: 500 }}>\r\n                <CardContent>\r\n                    <Typography>\r\n                        (931)-922-6045\r\n                    </Typography>\r\n                    <Typography>\r\n                        bhogan@litigationlogisticsinc.com\r\n                    </Typography>\r\n                    <Link href=\"https://github.com/peoplestealusernames/\" underline='hover'>\r\n                        <Typography>\r\n                            Github\r\n                        </Typography>\r\n                    </Link>\r\n                    <Link href=\"https://www.linkedin.com/in/brett-hogan-b2052321b/\" underline='hover'>\r\n                        <Typography>\r\n                            LinkedIn\r\n                        </Typography>\r\n                    </Link>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ maxWidth: 345 }}>\r\n                <CardContent>\r\n                    <Typography>\r\n                        Contact me!\r\n                    </Typography>\r\n                    <Typography>\r\n                        Feel free to reachout at anytime with any questions, comments, or conserns.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Box>\r\n        <Card sx={{ m: 1, maxWidth: 250, maxHeight: 250 }}>\r\n            <CardContent>\r\n                <CardMedia sx={{ maxWidth: 250, maxHeight: 250 }}\r\n                    component=\"img\"\r\n                    title=\"PIC\"\r\n                    src={process.env.PUBLIC_URL + \"/Photos/website.png\"}\r\n                    alt=\"QR Code\"\r\n                />\r\n            </CardContent>\r\n        </Card>\r\n    </Grid >\r\n    )\r\n}\r\n","import { Card, CardContent, CardMedia, Grid, Link, Typography } from \"@mui/material\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nexport function DBPage() {\r\n    return (<Grid container\r\n        spacing={1}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        margin=\"auto\"\r\n        sm={10}\r\n        sx={{\r\n            p: 2,\r\n        }}>\r\n        <Card sx={{ p: 2, maxWidth: 4000, textAlign: \"left\" }}>\r\n            <CardContent>\r\n                <Typography sx={{\r\n                    p: 1, fontSize: 40,\r\n                    justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\r\n                }}>\r\n                    Homebrew database\r\n                </Typography>\r\n                <Typography sx={{\r\n                    p: 1, fontSize: 25,\r\n                    justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\r\n                }}>\r\n                    WIP: Revamp in progress old infomation listed!\r\n                </Typography>\r\n                <Typography sx={{ p: .5 }}>\r\n                    The homebrew database is a project I've been working on to function as a form of custom smart home system.\r\n                    It's currently in a template stage as I lack the physical components to make this possible.\r\n                    The server software however is currently in a very workable and useable state.\r\n                </Typography>\r\n                <Typography sx={{ p: .5 }}>\r\n                    The current implimentation uses a NAT-Punching TCP socket-listner combo.\r\n                    Although this is far from production grade I had to work around not having port fowarding.\r\n                </Typography>\r\n                <Typography sx={{ p: .5 }}>\r\n                    Although previous versions used googles firebase\r\n                    observable in the orgional commits.\r\n                    I moved away from this for a more custom system as future proofing.\r\n                    It does however still using firebase as a signaling server (no static ip or port).\r\n                    I'm working on getting this to handle large amounts of sensor data which firebase would require payment for.\r\n                    It was also a latency issue where even with a simple RGB light a noticable lag was pressent.\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n        <Grid container sx={{ p: 2 }} spacing={3}\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"top\"\r\n            margin=\"auto\"\r\n            sm={10}\r\n        >\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 500 }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        Full setup\r\n                    </Typography>\r\n                    <CardMedia sx={{ maxHeight: 300, imageOrientation: 'from-image' }}\r\n                        component=\"img\"\r\n                        title=\"PIC\"\r\n                        src={process.env.PUBLIC_URL + \"/Photos/Projects/DB/Whole.jpg\"}\r\n                        alt=\"RGB+Screen+APP\"\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 300, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        Database\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        The left terminal on the PC.\r\n                        Current implimentation is fundamentally simple.\r\n                        It works similar to http requests and websockets.\r\n                        Functions are 'PUT' 'GET' 'LISTEN'.\r\n                        Put and get being obvious Listen however my take on googles snapshot system.\r\n                        For example A puts a listen on RGB.\r\n                        It recives a put request with the current state and any changes after.\r\n                    </Typography>\r\n                    <Link href=\"https://github.com/peoplestealusernames/Database\" underline='hover'>\r\n                        <Typography>\r\n                            GIT: Database\r\n                        </Typography>\r\n                    </Link>\r\n                    <Link href=\"https://www.npmjs.com/package/tenk-database\" underline='hover'>\r\n                        <Typography>\r\n                            NPM: tenk-database\r\n                        </Typography>\r\n                    </Link>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 250, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        RGB Controller\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        The right terminal on the PC.\r\n                        Using the server this listens to the RGB path.\r\n                        It then signals to a arduino using a custom serializer to change the PWM on pins.\r\n                        In turn switching transistors a certain % on or off.\r\n                    </Typography>\r\n                    <Link href=\"https://github.com/peoplestealusernames/TCPRGB\" underline='hover'>\r\n                        <Typography>\r\n                            GIT: Node:RGB\r\n                        </Typography>\r\n                    </Link>\r\n                    <Link href=\"https://github.com/peoplestealusernames/ArduinoRGB\" underline='hover'>\r\n                        <Typography>\r\n                            GIT: Ardunio:RGB\r\n                        </Typography>\r\n                    </Link>\r\n                    <Link component={RouterLink} to=\"/projects/RGB\" underline='hover'>\r\n                        <Typography>\r\n                            Project: RGB\r\n                        </Typography>\r\n                    </Link>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 250, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        Wall display\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        Screen on the wall to the right.\r\n                        This is a custom display running off unity.\r\n                        It is connected to the server via TCP and has a sleep function.\r\n                        This was a proof of concept for future derivatives of the smart home project.\r\n                        Currently it functions as a sun dial, clock, and calander.\r\n                    </Typography>\r\n                    <Link href=\"https://github.com/peoplestealusernames/Unity-Wall-Display\" underline='hover'>\r\n                        GIT: Wall-Display\r\n                    </Link>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 250, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        Phone app\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        Second computer on the lower shelf.\r\n                        This is a custom phone app running in unity.\r\n                        It is also connected to the server.\r\n                        Currently it only functions as a toggle for puting the display into sleep mode and RGB control.\r\n                        The RGB color wheel however does work and has drag functionality.\r\n                    </Typography>\r\n                    <Link href=\"https://github.com/peoplestealusernames/Connector-App\" underline='hover'>\r\n                        GIT: Phone app\r\n                    </Link>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 250, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        Custom Encryption\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        The database runs on its own encryption system to allow programs without encryption to connect.\r\n                        The current implimentation uses utf-16 strings and converts them to numbers.\r\n                        Nodejs had a error in the rough range of 55,000-60,000 out of 65,000 so only the first 50,000 characters are used.\r\n                        In future I plan to reimpliment an old encryption system I wrote in lua off a spreadsheet test.\r\n                    </Typography>\r\n                    <Link href=\"https://github.com/peoplestealusernames/Database/blob/master/tenk-database/ts/crypto.ts\" underline='hover'>\r\n                        <Typography> GIT: Custom Encryption API</Typography>\r\n                    </Link>\r\n                    <Link href=\"https://github.com/peoplestealusernames/CC-Code/blob/master/API/EncryptionAPI.lua\" underline='hover'>\r\n                        <Typography> GIT: Old LUA code</Typography>\r\n                    </Link>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid >\r\n    </Grid >\r\n    )\r\n}\r\n\r\n//TODO: Encryption project for all encrpytion attempts","import { Card, CardContent, Grid, Link, Typography } from \"@mui/material\";\r\n\r\nexport function RGBPage() {\r\n    return (<Grid container\r\n        spacing={1}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        margin=\"auto\"\r\n        sm={10}\r\n        sx={{\r\n            p: 2,\r\n        }}>\r\n        <Card sx={{ p: 2, maxWidth: 4000, textAlign: \"left\" }}>\r\n            <CardContent>\r\n                <Typography sx={{\r\n                    p: 1, fontSize: 40,\r\n                    justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\r\n                }}>\r\n                    IOT Controlled RGB\r\n                </Typography>\r\n                <Typography sx={{ p: .5 }}>\r\n                    Using the IOT to connect RGB lights to the internet through 3 diffrent methods.\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n        <Grid container sx={{ p: 2 }} spacing={3}\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"top\"\r\n            margin=\"auto\"\r\n            sm={10}\r\n        >\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 400, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        The Hardware\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        The Ardunio was a nano so the only non pin IO I had was serial.\r\n                        So the code on the Arduino read serial to control the lights.\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        The RGB lights are standard over the counter 12V RGBs.\r\n                        The Ardunio cannot provide enough power however,\r\n                        so its original power supply was modified to be used as a power supply.\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        The power is regulated by 3 transistors controlled by the Arudino.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 400, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        The Arduino Code\r\n                    </Typography>\r\n                    <Grid sx={{ m: 1 }}>\r\n                        <Typography>\r\n                            Ardunio however has no native way of doing this so I made a packet system.\r\n                        </Typography>\r\n                        <Typography>\r\n                            A packet is split by a '|' and an example would be \"|r=255|\".\r\n                        </Typography>\r\n                        <Typography>\r\n                            After spliting it, the code reads the first char which should be r, g or b.\r\n                        </Typography>\r\n                        <Typography>\r\n                            Then convert the rest into a number and define it as r, g or b.\r\n                        </Typography>\r\n                        <Typography>\r\n                            Update the pins and done.\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Link href=\"https://github.com/peoplestealusernames/ArduinoRGB\" underline='hover'>\r\n                        <Typography>\r\n                            GIT: Ardunio Code\r\n                        </Typography>\r\n                    </Link>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 400, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        Computer Code V3\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        Version 3 is currently a WIP but is going to use the same snapshot system from the current database system.\r\n                        Only diffrence being the current system uses TCP sockets the new one will use WSS.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 400, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        Computer Code V2\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        Version 2 used the old TCP database system that is slowly being replaced by the WSS and HTTPS system.\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        It used the snapshot and listen system from the database to listen for changes on RGB values.\r\n                        This was done from things like a website and a phone app. {/*TODO:ADD */}\r\n                    </Typography>\r\n                    <Link href=\"https://github.com/peoplestealusernames/TCPRGB/tree/6aaa3bb210e886996156a366b99659f1bbff4f68\" underline='hover'>\r\n                        <Typography>\r\n                            GIT: Node:RGB\r\n                        </Typography>\r\n                    </Link>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 400, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        Computer Code V1\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        Version 1 I lost the code for but it used Googles Firebase instead of my custom database to control it.\r\n                        It used a similar snapshot system to listen for changes.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid >\r\n    </Grid >\r\n    )\r\n}\r\n\r\n//TODO: Encryption project for all encrpytion attempts","import { Card, CardContent, CardMedia, Grid, Link, Typography } from \"@mui/material\";\r\n\r\nexport function CCDiscordPage() {\r\n    return (<Grid container\r\n        spacing={1}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        margin=\"auto\"\r\n        sm={10}\r\n        sx={{\r\n            p: 2,\r\n        }}>\r\n        <Card sx={{ p: 2, maxWidth: 4000, textAlign: \"left\" }}>\r\n            <CardContent>\r\n                <Typography sx={{\r\n                    p: 1, fontSize: 40,\r\n                    justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\r\n                }}>\r\n                    Discord bots running off Computer Craft\r\n                </Typography>\r\n                <Grid sx={{ p: .5 }}>\r\n                    <Typography>\r\n                        Computer Craft is a Minecraft mod that acts as an ingame LUA terminal.\r\n                    </Typography>\r\n                    <Typography>\r\n                        This project took that and turned it into a discord bot.\r\n                    </Typography>\r\n                    <Typography>\r\n                        This was made as a notification system for when I was not ingame. And was also planned to controll automated tasks.\r\n                    </Typography>\r\n                    <Link href=\"https://github.com/peoplestealusernames/Computer-Craft-and-discord/\" underline='hover'>\r\n                        <Typography>\r\n                            GIT: Computer Craft and discord\r\n                        </Typography>\r\n                    </Link>\r\n                </Grid>\r\n            </CardContent>\r\n        </Card>\r\n        <Grid container sx={{ p: 2 }} spacing={3}\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"top\"\r\n            margin=\"auto\"\r\n            sm={10}\r\n        >\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 400, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        The Front\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        When ran it goes into a predetermined discord and makes a new channel.\r\n                        It then monitors that chat and runs anything posted in chat and post the results.\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        Computercraft also has IO with most things in game so it could be modified to control them remotely.\r\n                        It could also read sensor data to notify me in the event of emergency.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 400, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        Behind The Scenes\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        Computer Craft had websockets, but not very good support for them.\r\n                        I had to make a custom heart beat system and find unique ways to send\r\n                        messages to discord's and OAUTH's standards.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 400, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        Login\r\n                    </Typography>\r\n                    <Typography sx={{ p: .5, fontSize: 20, textAlign: \"center\" }}>\r\n                        Where I can do better\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        The login system is a hot mess.\r\n                        It checks everything before attempting to loggin but,\r\n                        Logging in all happens within the same while loop.\r\n                        This is because I thought having a constantly updating auth in the main loop would be bad.\r\n                        But because of the fragmented way discord handles auth it can lead to some data loss.\r\n                        It also has zero error handling if it fails it crashes end and you have to manualy reboot.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid >\r\n    </Grid >\r\n    )\r\n}\r\n//TODO: add photo of discord bot","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport { styled } from '@mui/material/styles';\r\nimport Paper from '@mui/material/Paper';\r\nimport { Typography } from '@mui/material';\r\n\r\nconst heights = [150, 30, 90, 70, 110, 150, 130, 80, 50, 90, 100, 150, 30, 50, 80];\r\n\r\nconst Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    color: theme.palette.text.secondary,\r\n    border: '1px solid black',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n}));\r\n\r\nexport default function TestTSX() {\r\n    return (\r\n        <Typography>AYE</Typography>\r\n    );\r\n}","import { Card, CardContent, CardMedia, Grid, Link, Typography } from \"@mui/material\";\r\n\r\nexport function VEXArmPage() {\r\n    return (<Grid container\r\n        spacing={1}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        margin=\"auto\"\r\n        sm={10}\r\n        sx={{\r\n            p: 2,\r\n        }}>\r\n        <Card sx={{ p: 2, maxWidth: 4000, textAlign: \"left\" }}>\r\n            <CardContent>\r\n                <Typography sx={{\r\n                    p: 1, fontSize: 40,\r\n                    justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\r\n                }}>\r\n                    Vex Robotic Arm\r\n                </Typography>\r\n                <Typography sx={{ p: .5 }}>\r\n                    As part of the PLTW curriculum me and my group partner were tasked with building a working robotic arm with a claw.\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n        <Grid container sx={{ p: 2 }} spacing={3}\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"top\"\r\n            margin=\"auto\"\r\n            sm={10}\r\n        >\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 500 }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        Finial Product\r\n                    </Typography>\r\n                    <CardMedia sx={{ maxHeight: 300, imageOrientation: 'from-image' }}\r\n                        component=\"img\"\r\n                        title=\"RobotArm\"\r\n                        src={process.env.PUBLIC_URL + \"/Photos/Projects/RobotArm/RobotArmFull.jpg\"}\r\n                        alt=\"Full Robotic Arm\"\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 400, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        The Design\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        Me and my group partner thought a two joint robotic arm on a swivel would be the best deisgn.\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        We quickly found out the servos were two weak to handle the weight.\r\n                        So to compensate we added counter weights.\r\n                        This was a major flaw with the final design.\r\n                    </Typography>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        The Remote\r\n                    </Typography>\r\n                    <Typography>\r\n                        Seen in the back of the photo it is four potetiometers on a plate connected to the controller.\r\n                        The reason for this deisgn is we were limited to a basic VEX kit, and it offered the most overall control when compaired to other options.\r\n                        Each potetiometer was linked to a servo and it output was proportinal to the servos motion.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 400, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        The Code\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        Although I lost the source code I do remember what it did.\r\n                        It was a while true loop that kept setting servo position to potetiometer input.\r\n                        Only one issue servos are 0-180 but potetiometers were -257-257 upon testing.\r\n                        So simple clamp and scaleing methods had to be used to adjust it correctly.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 400, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        What I learned\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        The deisgn of this robotic arm failed almost on start,\r\n                        as right after attaching the first joint the swivil gave out.\r\n                        At that point we should have know it was a bad design and redesigned but persevered,\r\n                        this however lead to the design not working as the claw was to heavy for the arm.\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        I learned that some designs although acheviable are not practical.\r\n                        I learned that redesigning in the beginning is better than failing at the end.\r\n                        And I learned that fully designing a soluton before building it will help you stop ftal flaws.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid >\r\n    </Grid >\r\n    )\r\n}\r\n//TODO: see if you can find src code","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport { } from 'react-router'\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\r\nimport { Navigation } from './components/Naviation';\r\nimport { MainPage } from './pages/MainPage';\r\nimport { ExperiencePage } from './pages/Experience';\r\nimport { ProjectPage } from './pages/ProjectPage/ProjectPage';\r\nimport { ContactPage } from './pages/ContactPage';\r\nimport { DBPage } from './pages/Projects/DBPage';\r\nimport { RGBPage } from './pages/Projects/RGBPage';\r\nimport { CCDiscordPage } from './pages/Projects/CCDiscord';\r\nimport TestTSX from './pages/Projects/Test';\r\nimport { VEXArmPage } from './pages/Projects/VEXArm';\r\n\r\n//TODO click on images to enlarge them\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Navigation />\r\n      <Routes>\r\n        <Route path=\"\" element={\r\n          <MainPage />\r\n        } />\r\n        <Route path=\"contact\" element={\r\n          <ContactPage />\r\n        } />\r\n        <Route path=\"projects\" element={\r\n          <ProjectPage />\r\n        } />\r\n        <Route path=\"skills\" element={\r\n          <ExperiencePage />\r\n        } />\r\n        <Route path=\"projects/db\" element={\r\n          <DBPage />\r\n        } />\r\n        <Route path=\"projects/RGB\" element={\r\n          <RGBPage />\r\n        } />\r\n        <Route path=\"projects/CCDiscord\" element={\r\n          <CCDiscordPage />\r\n        } />\r\n        <Route path=\"test\" element={\r\n          <TestTSX />\r\n        } />\r\n        <Route path=\"projects/VEXRobotArm\" element={\r\n          <VEXArmPage />\r\n        } />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createTheme, CssBaseline, ThemeProvider } from '@mui/material';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={createTheme({ palette: { mode: 'dark' } })}>\r\n      <CssBaseline>\r\n        <App />\r\n      </CssBaseline>\r\n    </ThemeProvider>\r\n  </React.StrictMode >,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}