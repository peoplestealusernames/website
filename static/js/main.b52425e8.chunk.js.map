{"version":3,"sources":["components/Naviation.tsx","pages/MainPage.tsx","pages/Experience.tsx","pages/ProjectPage.tsx","pages/ContactPage.tsx","pages/Projects/DBPage.tsx","pages/Projects/RGBPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["items","path","label","Navigation","Card","sx","textAlign","verticalAlign","CardContent","Tabs","centered","display","justifyContent","alignItems","margin","map","item","Tab","component","Link","to","p","m","MainPage","className","Grid","container","spacing","direction","sm","Box","background","gridTemplateColumns","md","gap","maxWidth","CardMedia","src","alt","Typography","fontSize","Skills","name","ExperiencePage","skill","ProjectPage","RouterLink","underline","ContactPage","maxHeight","title","Photos","DBPage","RGBPage","App","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","ThemeProvider","theme","createTheme","palette","mode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.b52425e8.chunk.js","sourcesContent":["import { Tab, Tabs, Card, CardContent } from \"@mui/material\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst items = [\r\n    { path: '/website/', label: 'Home' },\r\n    { path: '/website/skills', label: 'Skills' },\r\n    { path: '/website/projects', label: 'Projects' },\r\n    { path: '/website/contact', label: 'Contact' },\r\n]\r\n\r\nexport function Navigation() {\r\n    return (\r\n        <Card\r\n            sx={{\r\n                textAlign: \"center\", verticalAlign: \"top\"\r\n            }}>\r\n            <CardContent>\r\n                <Tabs\r\n                    centered sx={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\", alignItems: \"up\",\r\n                        margin: \"auto\",\r\n                        textAlign: \"center\", verticalAlign: \"top\"\r\n                    }}>\r\n                    {items.map(item => {\r\n                        return (\r\n                            <Tab component={Link} label={item.label} to={item.path}\r\n                                sx={{\r\n                                    p: 0,\r\n                                    m: 0,\r\n                                    verticalAlign: \"middle\", textAlign: \"center\"\r\n                                }}\r\n                            ></Tab>\r\n                        )\r\n                    })}\r\n                </Tabs>\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n","import { Box, Card, CardActionArea, CardContent, CardMedia, Grid, ImageList, ImageListItem, Paper, Typography } from \"@mui/material\";\nimport { Fragment } from \"react\";\n\nconst BegImage = [\n    {\n        img: 'https://github.com/peoplestealusernames/website/blob/master/public/Photos/Begin/scratch.png?raw=true',\n        title: 'scratch',\n    },\n    {\n        img: 'https://github.com/peoplestealusernames/website/blob/master/public/Photos/Begin/legoRobotic.png?raw=true',\n        title: 'LEGORobotic',\n    },\n]\n\nexport function MainPage() {\n    return (\n        <div className=\"MainPage\">\n            <Grid container spacing={2}\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                margin=\"auto\"\n                sm={10}\n                sx={{\n                    p: 2,\n                }}\n            >\n                <Box\n                    justifyContent=\"center\"\n                    alignItems=\"center\"\n                    sx={{\n                        p: 3,\n                        background: \"red\",\n                        display: 'grid',\n                        gridTemplateColumns: { md: '1fr 1fr' },\n                        gap: 5,\n                    }}\n                >\n                    <Card sx={{ maxWidth: 500 }}>\n                        <CardContent>\n                            <CardMedia\n                                component=\"img\"\n                                src={\"https://github.com/peoplestealusernames/website/blob/master/public/Photos/Head.jpg?raw=true\"}\n                                alt=\"Head\"\n                            />\n                        </CardContent>\n                    </Card>\n                    <Card sx={{ maxWidth: 345 }}>\n                        <CardContent>\n                            <Typography sx={{\n                                p: 1, fontSize: 35,\n                                justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\n                            }}>\n                                About me\n                            </Typography>\n                            <Typography sx={{\n                                p: .5, fontSize: 20,\n                                justifyContent: \"left\", alignItems: \"left\", textAlign: \"left\"\n                            }}>\n                                Hello, I'm Brett Hogan!\n                            </Typography>\n                            <Typography sx={{\n                                p: 1,\n                                justifyContent: \"left\", alignItems: \"left\", textAlign: \"left\"\n                            }}>\n                                I'm currently a freshman at MTSU studying Mechatronics Engineering.\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </Box>\n            </Grid>\n\n            <Grid container spacing={2}\n                direction=\"row\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n\n            </Grid>\n        </div >\n    )\n}\n","import { Card, CardContent, CardMedia, Grid, Link, Typography } from \"@mui/material\";\n\nconst Skills = [\n    { name: \"NodeJS\" },\n    { name: \"TypeScript\" },\n    { name: \"Lua\" },\n    { name: \"C#\" },\n    { name: \"Firebase\" },\n    { name: \"OAuth2\" },\n    { name: \"Encryption\" },\n    { name: \"TCP\" },\n    { name: \"SQF\" },\n    { name: \"P2P\" },\n    { name: \"Unity\" },\n    { name: \"Cad\" },\n    { name: \"Autodesk\" },\n    { name: \"Inventor\" },\n    { name: \"Arduino\" },\n    { name: \"Compute shaders\" },\n    { name: \"Soldering\" },\n    { name: \"Networking\" },\n    { name: \"IT\" },\n    { name: \"Java\" },\n    { name: \"Cryptography\" },\n    { name: \"Team Management\" },\n    { name: \"Problem solving\" },\n    { name: \"Electrical\" },\n    { name: \"Engineering\" },\n    { name: \"Aerospace Engineering\" },\n    { name: \"Cordinating\" },\n    { name: \"Hard working\" },\n]\n\nexport function ExperiencePage() {\n    return (<Grid container spacing={3}\n        direction=\"row\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        margin=\"auto\"\n        sm={10}\n        sx={{\n            p: 2,\n        }}\n    >\n        {Skills.map(skill => {\n            return (\n                < Grid margin=\"auto\"\n                    sx={{\n                        p: 0.5,\n                    }\n                    }>\n                    <Card sx={{ p: 1, m: 1, maxWidth: 500 }}>\n                        <Typography sx={{\n                            p: 1, fontSize: 40,\n                            justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\n                        }}>\n                            {skill.name}\n                        </Typography>\n                    </Card>\n                </Grid >\n            )\n        })}\n    </Grid >\n    )\n}","import { Card, CardContent, Grid, Link, Typography } from \"@mui/material\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nconst Photos = \"https://github.com/peoplestealusernames/website/blob/master/public/Photos\"\r\n\r\nexport function ProjectPage() {\r\n    return (<Grid container spacing={3}\r\n        direction=\"row\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        margin=\"auto\"\r\n        sm={10}\r\n        sx={{\r\n            justifyContent: \"center\", alignItems: \"up\", textAlign: \"center\",\r\n            p: 2\r\n        }}\r\n    >\r\n        <Card sx={{ p: 1, m: 1, maxWidth: 250 }}>\r\n            <CardContent>\r\n                <Link component={RouterLink} to=\"/website/projects/RGB\" underline='hover'>\r\n                    <Typography>\r\n                        RGB\r\n                    </Typography>\r\n                </Link>\r\n                <Typography>\r\n                    A mini story about learning electrical from scratch.\r\n                    While connecting a RGB strip to the internet.\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n        <Card sx={{ p: 1, m: 1, maxWidth: 220 }}>\r\n            <CardContent>\r\n                <Link component={RouterLink} to=\"/website/projects/db\" underline='hover'>\r\n                    <Typography>\r\n                        Homebrew database\r\n                    </Typography>\r\n                </Link>\r\n                <Typography>\r\n                    A selfmade database system using TCP sockets\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n        <Card sx={{ p: 1, m: 1, maxWidth: 220 }}>\r\n            <CardContent>\r\n                <Link component={RouterLink} to=\"/website/projects/psudo\" underline='hover'>\r\n                    <Typography>\r\n                        Psudo project\r\n                    </Typography>\r\n                </Link>\r\n                <Typography>\r\n                    A group of APIs for future use as part of smarthome project\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    </Grid >\r\n    )\r\n}\r\n","import { Box, Card, CardContent, CardMedia, Grid, Link, Typography } from \"@mui/material\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst Photos = \"https://github.com/peoplestealusernames/website/blob/master/public/Photos\"\n\nexport function ContactPage() {\n    return (<Grid container spacing={2}\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        margin=\"auto\"\n        sm={10}\n        sx={{\n            p: 2,\n        }}\n    >\n        <Box\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            sx={{\n                p: 3,\n                background: \"red\",\n                display: 'grid',\n                gridTemplateColumns: { md: '1fr 1fr' },\n                gap: 5,\n            }}\n        >\n            <Card sx={{ maxWidth: 500 }}>\n                <CardContent>\n                    <Typography>\n                        (931)-922-6045\n                    </Typography>\n                    <Typography>\n                        bhogan@litigationlogisticsinc.com\n                    </Typography>\n                    <Link component={RouterLink} to=\"https://github.com/peoplestealusernames/\" underline='hover'>\n                        <Typography>\n                            Github\n                        </Typography>\n                    </Link>\n                    <Link component={RouterLink} to=\"https://www.linkedin.com/in/brett-hogan-b2052321b/\" underline='hover'>\n                        <Typography>\n                            LinkedIn\n                        </Typography>\n                    </Link>\n                </CardContent>\n            </Card>\n            <Card sx={{ maxWidth: 345 }}>\n                <CardContent>\n                    <Typography>\n                        Contact me!\n                    </Typography>\n                    <Typography>\n                        Feel free to reachout at anytime with any questions, comments, or conserns.\n                    </Typography>\n                </CardContent>\n            </Card>\n        </Box>\n        <Card sx={{ m: 1, maxWidth: 250, maxHeight: 250 }}>\n            <CardContent>\n                <CardMedia sx={{ maxWidth: 250, maxHeight: 250 }}\n                    component=\"img\"\n                    title=\"PIC\"\n                    src={Photos + \"/website.png?raw=true\"}\n                    alt=\"RGB+Screen+APP\"\n                />\n            </CardContent>\n        </Card>\n    </Grid >\n    )\n}\n","import { Card, CardContent, CardMedia, Grid, Link, Typography } from \"@mui/material\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\n\r\nconst Photos = \"https://github.com/peoplestealusernames/website/blob/master/public/Photos\"\r\n\r\nexport function DBPage() {\r\n    return (<Grid container\r\n        spacing={1}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        margin=\"auto\"\r\n        sm={10}\r\n        sx={{\r\n            p: 2,\r\n        }}>\r\n        <Card sx={{ p: 2, maxWidth: 4000, textAlign: \"left\" }}>\r\n            <CardContent>\r\n                <Typography sx={{\r\n                    p: 1, fontSize: 40,\r\n                    justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\r\n                }}>\r\n                    Homebrew database\r\n                </Typography>\r\n                <Typography sx={{ p: .5 }}>\r\n                    The homebrew database is a project I've been working on to function as a form of custom smart home system.\r\n                    It's currently in a template stage as I lack the physical components to make this possible.\r\n                    The server software however is currently in a very workable and useable state.\r\n                </Typography>\r\n                <Typography sx={{ p: .5 }}>\r\n                    The current implimentation uses a NAT-Punching TCP socket-listner combo.\r\n                    Although this is far from production grade I had to work around not having port fowarding.\r\n                </Typography>\r\n                <Typography sx={{ p: .5 }}>\r\n                    Although previous versions used googles firebase\r\n                    observable in the orgional commits.\r\n                    I moved away from this for a more custom system as future proofing.\r\n                    It does however still using firebase as a signaling server (no static ip or port).\r\n                    I'm working on getting this to handle large amounts of sensor data which firebase would require payment for.\r\n                    It was also a latency issue where even with a simple RGB light a noticable lag was pressent.\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n        <Grid container sx={{ p: 2 }} spacing={3}\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"top\"\r\n            margin=\"auto\"\r\n            sm={10}\r\n        >\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 500 }}>\r\n                <CardContent>\r\n                    <Typography sx={{\r\n                        p: 1, fontSize: 30,\r\n                    }}>\r\n                        Full setup\r\n                    </Typography>\r\n                    <CardMedia sx={{ maxHeight: 300 }}\r\n                        component=\"img\"\r\n                        title=\"PIC\"\r\n                        src={Photos + \"/Projects/DB/Whole.jpg?raw=true\"}\r\n                        alt=\"RGB+Screen+APP\"\r\n                    />\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 250, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        Database\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        The left terminal on the PC.\r\n                        Current implimentation is fundamentally simple.\r\n                        It works similar to http requests and websockets.\r\n                        Functions are 'PUT' 'GET' 'LISTEN'.\r\n                        Put and get being obvious Listen however my take on googles snapshot system.\r\n                        For example A puts a listen on RGB.\r\n                        It recives a put request with the current state and any changes after.\r\n                    </Typography>\r\n                    <Link component={RouterLink} to=\"https://github.com/peoplestealusernames/Database\" underline='hover'>\r\n                        GIT: Database\r\n                    </Link>\r\n                    <Link component={RouterLink} to=\"https://www.npmjs.com/package/tenk-database\" underline='hover'>\r\n                        NPM: tenk-database\r\n                    </Link>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 250, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        RGB Controller\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        The right terminal on the PC.\r\n                        Using the server this listens to the RGB path.\r\n                        It then signals to a arduino using a custom serializer to change the PWM on pins.\r\n                        In turn switching transistors a certain % on or off.\r\n                    </Typography>\r\n                    <Link component={RouterLink} to=\"https://github.com/peoplestealusernames/TCPRGB\" underline='hover'>\r\n                        <Typography>\r\n                            GIT: Node:RGB\r\n                        </Typography>\r\n                    </Link>\r\n                    <Link component={RouterLink} to=\"https://github.com/peoplestealusernames/ArduinoRGB\" underline='hover'>\r\n                        <Typography>\r\n                            GIT: Ardunio:RGB\r\n                        </Typography>\r\n                    </Link>\r\n                    <Link component={RouterLink} to=\"website/projects/RGB\" underline='hover'>\r\n                        <Typography>\r\n                            Project: RGB\r\n                        </Typography>\r\n                    </Link>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 250, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        Wall display\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        Screen on the wall to the right.\r\n                        This is a custom display running off unity.\r\n                        It is connected to the server via TCP and has a sleep function.\r\n                        This was a proof of concept for future derivatives of the smart home project.\r\n                        Currently it functions as a sun dial, clock, and calander.\r\n                    </Typography>\r\n                    <Link component={RouterLink} to=\"https://github.com/peoplestealusernames/Unity-Wall-Display\" underline='hover'>\r\n                        GIT: Wall-Display\r\n                    </Link>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 250, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        Phone app\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        Second computer on the lower shelf.\r\n                        This is a custom phone app running in unity.\r\n                        It is also connected to the server.\r\n                        Currently it only functions as a toggle for puting the display into sleep mode and RGB control.\r\n                        The RGB color wheel however does work and has drag functionality.\r\n                    </Typography>\r\n                    <Link component={RouterLink} to=\"https://github.com/peoplestealusernames/Connector-App\" underline='hover'>\r\n                        GIT: Phone app\r\n                    </Link>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 250, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        Custom Encryption\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        The database runs on its own encryption system to allow programs without encryption to connect.\r\n                        The current implimentation uses utf-16 strings and converts them to numbers.\r\n                        Nodejs had a error in the rough range of 55,000-60,000 out of 65,000 so only the first 50,000 characters are used.\r\n                        In future I plan to reimpliment an old encryption system I wrote in lua off a spreadsheet test.\r\n                    </Typography>\r\n                    <Link component={RouterLink} to=\"https://github.com/peoplestealusernames/Database/blob/master/tenk-database/ts/crypto.ts\" underline='hover'>\r\n                        <Typography> GIT: Custom Encryption API</Typography>\r\n                    </Link>\r\n                    <Link component={RouterLink} to=\"https://github.com/peoplestealusernames/CC-Code/blob/master/API/EncryptionAPI.lua\" underline='hover'>\r\n                        <Typography> GIT: Old LUA code</Typography>\r\n                    </Link>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid >\r\n    </Grid >\r\n    )\r\n}\r\n\r\n//TODO: Encryption project for all encrpytion attempts","import { Card, CardContent, Grid, Typography } from \"@mui/material\";\r\n\r\nconst Photos = \"https:/ / github.com / peoplestealusernames / website / blob / master / public / Photos\"\r\n\r\nexport function RGBPage() {\r\n    return (<Grid container\r\n        spacing={1}\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        margin=\"auto\"\r\n        sm={10}\r\n        sx={{\r\n            p: 2,\r\n        }}>\r\n        <Card sx={{ p: 2, maxWidth: 4000, textAlign: \"left\" }}>\r\n            <CardContent>\r\n                <Typography sx={{\r\n                    p: 1, fontSize: 40,\r\n                    justifyContent: \"center\", alignItems: \"center\", textAlign: \"center\"\r\n                }}>\r\n                    RGB, Ardunio, and simulation vs reality\r\n                </Typography>\r\n                <Typography sx={{ p: .5 }}>\r\n                    Trying to get the RGB lights to work with an Ardunio was my first time leaving a sim or software.\r\n                    I quickly learned just how little I learn a lot from it.\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n        <Grid container sx={{ p: 2 }} spacing={3}\r\n            direction=\"row\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"top\"\r\n            margin=\"auto\"\r\n            sm={10}\r\n        >\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 250, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        General electrical\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        I was compelely clueless at electrical and thought that everything would work like software.\r\n                        That was a very wrong assumption I got the wrong transistors, resistors, and had no pins.\r\n                        I effectivly had expensive desk orniments that could not be used.\r\n                        I also had to get a multimeter because I did not think i would need one.\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        I learned that hardware more than anything runs on Murphy's law.\r\n                        I learned about Ohms law proper, wiring, and connection making.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 250, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        Learning Arduino\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        Learning Arduino was something I passed off as the eaisest part.\r\n                        Although Arduino coding is easy debug was not what I was expecting.\r\n                        I think I tried just about every form of software debug until I bought a multimeter.\r\n                        In hindsight the issues were very easy to spot but I thought I could tough it out like software.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n            <Card sx={{ m: 1, p: 1, maxWidth: 250, textAlign: \"left\" }}>\r\n                <CardContent>\r\n                    <Typography sx={{ p: 1, fontSize: 30, textAlign: \"center\" }}>\r\n                        Soldering\r\n                    </Typography>\r\n                    <Typography sx={{ m: 1 }}>\r\n                        I never even heard of this until a friend pointed it out to me.\r\n                        I would like to say I'm decent at it now, however I will admit to causing plenty of mending and burning in the proccess.\r\n                        I made a few rookie mistakes like pin connector to make a connection rather than just using the pin.\r\n                        Very bad and weak solder on power supplies.\r\n                        Connecting pins together on the Ardunio.\r\n                        All of which have been fix but learning it was a fun challenge.\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid >\r\n    </Grid >\r\n    )\r\n}\r\n\r\n//TODO: Encryption project for all encrpytion attempts","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport { } from 'react-router'\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\nimport { Navigation } from './components/Naviation';\nimport { MainPage } from './pages/MainPage';\nimport { ExperiencePage } from './pages/Experience';\nimport { ProjectPage } from './pages/ProjectPage';\nimport { ContactPage } from './pages/ContactPage';\nimport { DBPage } from './pages/Projects/DBPage';\nimport { RGBPage } from './pages/Projects/RGBPage';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navigation />\n      <Routes>\n        <Route path=\"website/\" element={\n          <MainPage />\n        } />\n        <Route path=\"website/contact\" element={\n          <ContactPage />\n        } />\n        <Route path=\"website/projects\" element={\n          <ProjectPage />\n        } />\n        <Route path=\"website/skills\" element={\n          <ExperiencePage />\n        } />\n        <Route path=\"website/projects/db\" element={\n          <DBPage />\n        } />\n        <Route path=\"website/projects/RGB\" element={\n          <RGBPage />\n        } />\n      </Routes>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createTheme, CssBaseline, ThemeProvider } from '@mui/material';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={createTheme({ palette: { mode: 'dark' } })}>\n      <CssBaseline>\n        <App />\n      </CssBaseline>\n    </ThemeProvider>\n  </React.StrictMode >,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}